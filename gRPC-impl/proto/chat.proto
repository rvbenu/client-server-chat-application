syntax = "proto3";
package chat;

service ChatService {
  rpc Register(RegisterRequest) returns (StatusReply);
  rpc Login(LoginRequest) returns (LoginReply);
  rpc Logout(SessionRequest) returns (StatusReply);
  rpc SendMessage(MessageRequest) returns (StatusReply);
  rpc RetrieveOfflineMessages(OfflineRequest) returns (OfflineReply);
  rpc MessageHistory(HistoryRequest) returns (HistoryReply);
  rpc ListUsers(UserListRequest) returns (UserListReply);
  rpc DeleteMessage(DeleteMessageRequest) returns (StatusReply);
  rpc DeleteAccount(AccountRequest) returns (StatusReply);
  rpc Quit(Empty) returns (StatusReply);
}

message RegisterRequest {
  string username = 1;
  bytes password_hash = 2;
}

message LoginRequest {
  string username = 1;
  bytes password_hash = 2;
}

message LoginReply {
  bool success = 1;
  string session_token = 2;
  int32 unread_messages = 3;
  string error_message = 4;
}

message SessionRequest {
  string username = 1;
  string session_token = 2;
}

message MessageRequest {
  string sender = 1;
  string recipient = 2;
  string message = 3;
  int64 timestamp = 4;
}

message OfflineRequest {
  string username = 1;
  int32 count = 2;
  bool mark_as_read = 3;
}

message OfflineReply {
  repeated MessageData messages = 1;
}

message HistoryRequest {
  string username = 1;
  string recipient = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  int32 limit = 5;
}

message HistoryReply {
  repeated MessageData messages = 1;
}

message UserListRequest {
  string pattern = 1;
  int32 page = 2;
  int32 page_size = 3;
}

message UserListReply {
  repeated string usernames = 1;
}

message DeleteMessageRequest {
  string username = 1;
  repeated string message_ids = 2;
}

message AccountRequest {
  string username = 1;
}

message MessageData {
  string id = 1;
  string sender = 2;
  string recipient = 3;
  string content = 4;
  int64 timestamp = 5;
}

message StatusReply {
  bool success = 1;
  string error_message = 2;
}

message Empty {}
