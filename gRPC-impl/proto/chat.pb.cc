// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: chat.proto
// Protobuf C++ Version: 5.29.3

#include "chat.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace chat {

inline constexpr UserListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pattern_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_{0},
        page_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserListRequest::UserListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListRequestDefaultTypeInternal() {}
  union {
    UserListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListRequestDefaultTypeInternal _UserListRequest_default_instance_;

inline constexpr UserListReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : usernames_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserListReply::UserListReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserListReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListReplyDefaultTypeInternal() {}
  union {
    UserListReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListReplyDefaultTypeInternal _UserListReply_default_instance_;

inline constexpr StatusReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StatusReply::StatusReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StatusReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusReplyDefaultTypeInternal() {}
  union {
    StatusReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusReplyDefaultTypeInternal _StatusReply_default_instance_;

inline constexpr SessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SessionRequest::SessionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionRequestDefaultTypeInternal() {}
  union {
    SessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionRequestDefaultTypeInternal _SessionRequest_default_instance_;

inline constexpr RegisterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterRequest::RegisterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterRequestDefaultTypeInternal() {}
  union {
    RegisterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterRequestDefaultTypeInternal _RegisterRequest_default_instance_;

inline constexpr OfflineRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        count_{0},
        mark_as_read_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OfflineRequest::OfflineRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OfflineRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OfflineRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OfflineRequestDefaultTypeInternal() {}
  union {
    OfflineRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OfflineRequestDefaultTypeInternal _OfflineRequest_default_instance_;

inline constexpr MessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessageRequest::MessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageRequestDefaultTypeInternal() {}
  union {
    MessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageRequestDefaultTypeInternal _MessageRequest_default_instance_;

inline constexpr MessageData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessageData::MessageData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDataDefaultTypeInternal() {}
  union {
    MessageData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDataDefaultTypeInternal _MessageData_default_instance_;

inline constexpr LoginRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoginRequest::LoginRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginRequestDefaultTypeInternal() {}
  union {
    LoginRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;

inline constexpr LoginReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        unread_messages_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoginReply::LoginReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoginReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginReplyDefaultTypeInternal() {}
  union {
    LoginReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginReplyDefaultTypeInternal _LoginReply_default_instance_;

inline constexpr HistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_{::int64_t{0}},
        end_time_{::int64_t{0}},
        limit_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryRequest::HistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryRequestDefaultTypeInternal() {}
  union {
    HistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryRequestDefaultTypeInternal _HistoryRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr DeleteMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_ids_{},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteMessageRequest::DeleteMessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteMessageRequestDefaultTypeInternal() {}
  union {
    DeleteMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteMessageRequestDefaultTypeInternal _DeleteMessageRequest_default_instance_;

inline constexpr AccountRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AccountRequest::AccountRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountRequestDefaultTypeInternal() {}
  union {
    AccountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountRequestDefaultTypeInternal _AccountRequest_default_instance_;

inline constexpr OfflineReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : messages_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OfflineReply::OfflineReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OfflineReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OfflineReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OfflineReplyDefaultTypeInternal() {}
  union {
    OfflineReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OfflineReplyDefaultTypeInternal _OfflineReply_default_instance_;

inline constexpr HistoryReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : messages_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryReply::HistoryReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoryReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryReplyDefaultTypeInternal() {}
  union {
    HistoryReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryReplyDefaultTypeInternal _HistoryReply_default_instance_;
}  // namespace chat
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_chat_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_chat_2eproto = nullptr;
const ::uint32_t
    TableStruct_chat_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::RegisterRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::RegisterRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::RegisterRequest, _impl_.password_hash_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::LoginRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::LoginRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::LoginRequest, _impl_.password_hash_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::LoginReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::LoginReply, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::chat::LoginReply, _impl_.session_token_),
        PROTOBUF_FIELD_OFFSET(::chat::LoginReply, _impl_.unread_messages_),
        PROTOBUF_FIELD_OFFSET(::chat::LoginReply, _impl_.error_message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::SessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::SessionRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::SessionRequest, _impl_.session_token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::MessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::MessageRequest, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageRequest, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageRequest, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageRequest, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::OfflineRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::OfflineRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::OfflineRequest, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::chat::OfflineRequest, _impl_.mark_as_read_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::OfflineReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::OfflineReply, _impl_.messages_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::HistoryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::HistoryRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::HistoryRequest, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::chat::HistoryRequest, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::chat::HistoryRequest, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::chat::HistoryRequest, _impl_.limit_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::HistoryReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::HistoryReply, _impl_.messages_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::UserListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::UserListRequest, _impl_.pattern_),
        PROTOBUF_FIELD_OFFSET(::chat::UserListRequest, _impl_.page_),
        PROTOBUF_FIELD_OFFSET(::chat::UserListRequest, _impl_.page_size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::UserListReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::UserListReply, _impl_.usernames_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::DeleteMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::DeleteMessageRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::DeleteMessageRequest, _impl_.message_ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::AccountRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::AccountRequest, _impl_.username_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::MessageData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::MessageData, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageData, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageData, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageData, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageData, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::StatusReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::StatusReply, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::chat::StatusReply, _impl_.error_message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::Empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::chat::RegisterRequest)},
        {10, -1, -1, sizeof(::chat::LoginRequest)},
        {20, -1, -1, sizeof(::chat::LoginReply)},
        {32, -1, -1, sizeof(::chat::SessionRequest)},
        {42, -1, -1, sizeof(::chat::MessageRequest)},
        {54, -1, -1, sizeof(::chat::OfflineRequest)},
        {65, -1, -1, sizeof(::chat::OfflineReply)},
        {74, -1, -1, sizeof(::chat::HistoryRequest)},
        {87, -1, -1, sizeof(::chat::HistoryReply)},
        {96, -1, -1, sizeof(::chat::UserListRequest)},
        {107, -1, -1, sizeof(::chat::UserListReply)},
        {116, -1, -1, sizeof(::chat::DeleteMessageRequest)},
        {126, -1, -1, sizeof(::chat::AccountRequest)},
        {135, -1, -1, sizeof(::chat::MessageData)},
        {148, -1, -1, sizeof(::chat::StatusReply)},
        {158, -1, -1, sizeof(::chat::Empty)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::chat::_RegisterRequest_default_instance_._instance,
    &::chat::_LoginRequest_default_instance_._instance,
    &::chat::_LoginReply_default_instance_._instance,
    &::chat::_SessionRequest_default_instance_._instance,
    &::chat::_MessageRequest_default_instance_._instance,
    &::chat::_OfflineRequest_default_instance_._instance,
    &::chat::_OfflineReply_default_instance_._instance,
    &::chat::_HistoryRequest_default_instance_._instance,
    &::chat::_HistoryReply_default_instance_._instance,
    &::chat::_UserListRequest_default_instance_._instance,
    &::chat::_UserListReply_default_instance_._instance,
    &::chat::_DeleteMessageRequest_default_instance_._instance,
    &::chat::_AccountRequest_default_instance_._instance,
    &::chat::_MessageData_default_instance_._instance,
    &::chat::_StatusReply_default_instance_._instance,
    &::chat::_Empty_default_instance_._instance,
};
const char descriptor_table_protodef_chat_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nchat.proto\022\004chat\":\n\017RegisterRequest\022\020\n"
    "\010username\030\001 \001(\t\022\025\n\rpassword_hash\030\002 \001(\014\"7"
    "\n\014LoginRequest\022\020\n\010username\030\001 \001(\t\022\025\n\rpass"
    "word_hash\030\002 \001(\014\"d\n\nLoginReply\022\017\n\007success"
    "\030\001 \001(\010\022\025\n\rsession_token\030\002 \001(\t\022\027\n\017unread_"
    "messages\030\003 \001(\005\022\025\n\rerror_message\030\004 \001(\t\"9\n"
    "\016SessionRequest\022\020\n\010username\030\001 \001(\t\022\025\n\rses"
    "sion_token\030\002 \001(\t\"W\n\016MessageRequest\022\016\n\006se"
    "nder\030\001 \001(\t\022\021\n\trecipient\030\002 \001(\t\022\017\n\007message"
    "\030\003 \001(\t\022\021\n\ttimestamp\030\004 \001(\003\"G\n\016OfflineRequ"
    "est\022\020\n\010username\030\001 \001(\t\022\r\n\005count\030\002 \001(\005\022\024\n\014"
    "mark_as_read\030\003 \001(\010\"3\n\014OfflineReply\022#\n\010me"
    "ssages\030\001 \003(\0132\021.chat.MessageData\"j\n\016Histo"
    "ryRequest\022\020\n\010username\030\001 \001(\t\022\021\n\trecipient"
    "\030\002 \001(\t\022\022\n\nstart_time\030\003 \001(\003\022\020\n\010end_time\030\004"
    " \001(\003\022\r\n\005limit\030\005 \001(\005\"3\n\014HistoryReply\022#\n\010m"
    "essages\030\001 \003(\0132\021.chat.MessageData\"C\n\017User"
    "ListRequest\022\017\n\007pattern\030\001 \001(\t\022\014\n\004page\030\002 \001"
    "(\005\022\021\n\tpage_size\030\003 \001(\005\"\"\n\rUserListReply\022\021"
    "\n\tusernames\030\001 \003(\t\"=\n\024DeleteMessageReques"
    "t\022\020\n\010username\030\001 \001(\t\022\023\n\013message_ids\030\002 \003(\t"
    "\"\"\n\016AccountRequest\022\020\n\010username\030\001 \001(\t\"`\n\013"
    "MessageData\022\n\n\002id\030\001 \001(\t\022\016\n\006sender\030\002 \001(\t\022"
    "\021\n\trecipient\030\003 \001(\t\022\017\n\007content\030\004 \001(\t\022\021\n\tt"
    "imestamp\030\005 \001(\003\"5\n\013StatusReply\022\017\n\007success"
    "\030\001 \001(\010\022\025\n\rerror_message\030\002 \001(\t\"\007\n\005Empty2\271"
    "\004\n\013ChatService\0224\n\010Register\022\025.chat.Regist"
    "erRequest\032\021.chat.StatusReply\022-\n\005Login\022\022."
    "chat.LoginRequest\032\020.chat.LoginReply\0221\n\006L"
    "ogout\022\024.chat.SessionRequest\032\021.chat.Statu"
    "sReply\0226\n\013SendMessage\022\024.chat.MessageRequ"
    "est\032\021.chat.StatusReply\022C\n\027RetrieveOfflin"
    "eMessages\022\024.chat.OfflineRequest\032\022.chat.O"
    "fflineReply\022:\n\016MessageHistory\022\024.chat.His"
    "toryRequest\032\022.chat.HistoryReply\0227\n\tListU"
    "sers\022\025.chat.UserListRequest\032\023.chat.UserL"
    "istReply\022>\n\rDeleteMessage\022\032.chat.DeleteM"
    "essageRequest\032\021.chat.StatusReply\0228\n\rDele"
    "teAccount\022\024.chat.AccountRequest\032\021.chat.S"
    "tatusReply\022&\n\004Quit\022\013.chat.Empty\032\021.chat.S"
    "tatusReplyb\006proto3"
};
static ::absl::once_flag descriptor_table_chat_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_chat_2eproto = {
    false,
    false,
    1618,
    descriptor_table_protodef_chat_2eproto,
    "chat.proto",
    &descriptor_table_chat_2eproto_once,
    nullptr,
    0,
    16,
    schemas,
    file_default_instances,
    TableStruct_chat_2eproto::offsets,
    file_level_enum_descriptors_chat_2eproto,
    file_level_service_descriptors_chat_2eproto,
};
namespace chat {
// ===================================================================

class RegisterRequest::_Internal {
 public:
};

RegisterRequest::RegisterRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.RegisterRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::RegisterRequest& from_msg)
      : username_(arena, from.username_),
        password_hash_(arena, from.password_hash_),
        _cached_size_{0} {}

RegisterRequest::RegisterRequest(
    ::google::protobuf::Arena* arena,
    const RegisterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chat.RegisterRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_hash_(arena),
        _cached_size_{0} {}

inline void RegisterRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:chat.RegisterRequest)
  SharedDtor(*this);
}
inline void RegisterRequest::SharedDtor(MessageLite& self) {
  RegisterRequest& this_ = static_cast<RegisterRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.password_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RegisterRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterRequest(arena);
}
constexpr auto RegisterRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterRequest),
                                            alignof(RegisterRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterRequest>(), &RegisterRequest::ByteSizeLong,
            &RegisterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_._cached_size_),
        false,
    },
    &RegisterRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> RegisterRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::RegisterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes password_hash = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.password_hash_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes password_hash = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.password_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\10\0\0\0\0\0\0"
    "chat.RegisterRequest"
    "username"
  }},
};

PROTOBUF_NOINLINE void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.RegisterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_hash_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterRequest& this_ = static_cast<const RegisterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.RegisterRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.RegisterRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes password_hash = 2;
          if (!this_._internal_password_hash().empty()) {
            const std::string& _s = this_._internal_password_hash();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.RegisterRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterRequest& this_ = static_cast<const RegisterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterRequest::ByteSizeLong() const {
          const RegisterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.RegisterRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // bytes password_hash = 2;
            if (!this_._internal_password_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_password_hash());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterRequest*>(&to_msg);
  auto& from = static_cast<const RegisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.RegisterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password_hash().empty()) {
    _this->_internal_set_password_hash(from._internal_password_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterRequest::InternalSwap(RegisterRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_hash_, &other->_impl_.password_hash_, arena);
}

::google::protobuf::Metadata RegisterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoginRequest::_Internal {
 public:
};

LoginRequest::LoginRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.LoginRequest)
}
inline PROTOBUF_NDEBUG_INLINE LoginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::LoginRequest& from_msg)
      : username_(arena, from.username_),
        password_hash_(arena, from.password_hash_),
        _cached_size_{0} {}

LoginRequest::LoginRequest(
    ::google::protobuf::Arena* arena,
    const LoginRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoginRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chat.LoginRequest)
}
inline PROTOBUF_NDEBUG_INLINE LoginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_hash_(arena),
        _cached_size_{0} {}

inline void LoginRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:chat.LoginRequest)
  SharedDtor(*this);
}
inline void LoginRequest::SharedDtor(MessageLite& self) {
  LoginRequest& this_ = static_cast<LoginRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.password_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LoginRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LoginRequest(arena);
}
constexpr auto LoginRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LoginRequest),
                                            alignof(LoginRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LoginRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LoginRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LoginRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LoginRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LoginRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LoginRequest>(), &LoginRequest::ByteSizeLong,
            &LoginRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_._cached_size_),
        false,
    },
    &LoginRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LoginRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 34, 2> LoginRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::LoginRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes password_hash = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.password_hash_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes password_hash = 2;
    {PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.password_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\10\0\0\0\0\0\0"
    "chat.LoginRequest"
    "username"
  }},
};

PROTOBUF_NOINLINE void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.LoginRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_hash_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoginRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoginRequest& this_ = static_cast<const LoginRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoginRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoginRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.LoginRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.LoginRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes password_hash = 2;
          if (!this_._internal_password_hash().empty()) {
            const std::string& _s = this_._internal_password_hash();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.LoginRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoginRequest::ByteSizeLong(const MessageLite& base) {
          const LoginRequest& this_ = static_cast<const LoginRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoginRequest::ByteSizeLong() const {
          const LoginRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.LoginRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // bytes password_hash = 2;
            if (!this_._internal_password_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_password_hash());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoginRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoginRequest*>(&to_msg);
  auto& from = static_cast<const LoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.LoginRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password_hash().empty()) {
    _this->_internal_set_password_hash(from._internal_password_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoginRequest::InternalSwap(LoginRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_hash_, &other->_impl_.password_hash_, arena);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoginReply::_Internal {
 public:
};

LoginReply::LoginReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.LoginReply)
}
inline PROTOBUF_NDEBUG_INLINE LoginReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::LoginReply& from_msg)
      : session_token_(arena, from.session_token_),
        error_message_(arena, from.error_message_),
        _cached_size_{0} {}

LoginReply::LoginReply(
    ::google::protobuf::Arena* arena,
    const LoginReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoginReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, unread_messages_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::unread_messages_));

  // @@protoc_insertion_point(copy_constructor:chat.LoginReply)
}
inline PROTOBUF_NDEBUG_INLINE LoginReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : session_token_(arena),
        error_message_(arena),
        _cached_size_{0} {}

inline void LoginReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           0,
           offsetof(Impl_, unread_messages_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::unread_messages_));
}
LoginReply::~LoginReply() {
  // @@protoc_insertion_point(destructor:chat.LoginReply)
  SharedDtor(*this);
}
inline void LoginReply::SharedDtor(MessageLite& self) {
  LoginReply& this_ = static_cast<LoginReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_token_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LoginReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LoginReply(arena);
}
constexpr auto LoginReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LoginReply),
                                            alignof(LoginReply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LoginReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LoginReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LoginReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LoginReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LoginReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LoginReply>(), &LoginReply::ByteSizeLong,
            &LoginReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LoginReply, _impl_._cached_size_),
        false,
    },
    &LoginReply::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LoginReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 50, 2> LoginReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::LoginReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.error_message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LoginReply, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.success_)}},
    // string session_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.session_token_)}},
    // int32 unread_messages = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LoginReply, _impl_.unread_messages_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.unread_messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string session_token = 2;
    {PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.session_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 unread_messages = 3;
    {PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.unread_messages_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string error_message = 4;
    {PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\15\0\15\0\0\0"
    "chat.LoginReply"
    "session_token"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void LoginReply::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.LoginReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_token_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  ::memset(&_impl_.success_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.unread_messages_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.unread_messages_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoginReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoginReply& this_ = static_cast<const LoginReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoginReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoginReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.LoginReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string session_token = 2;
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.LoginReply.session_token");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 unread_messages = 3;
          if (this_._internal_unread_messages() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_unread_messages(), target);
          }

          // string error_message = 4;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.LoginReply.error_message");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.LoginReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoginReply::ByteSizeLong(const MessageLite& base) {
          const LoginReply& this_ = static_cast<const LoginReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoginReply::ByteSizeLong() const {
          const LoginReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.LoginReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string session_token = 2;
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_token());
            }
            // string error_message = 4;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
            // int32 unread_messages = 3;
            if (this_._internal_unread_messages() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_unread_messages());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoginReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoginReply*>(&to_msg);
  auto& from = static_cast<const LoginReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.LoginReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  if (from._internal_unread_messages() != 0) {
    _this->_impl_.unread_messages_ = from._impl_.unread_messages_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoginReply::CopyFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoginReply::InternalSwap(LoginReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.unread_messages_)
      + sizeof(LoginReply::_impl_.unread_messages_)
      - PROTOBUF_FIELD_OFFSET(LoginReply, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata LoginReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SessionRequest::_Internal {
 public:
};

SessionRequest::SessionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.SessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE SessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::SessionRequest& from_msg)
      : username_(arena, from.username_),
        session_token_(arena, from.session_token_),
        _cached_size_{0} {}

SessionRequest::SessionRequest(
    ::google::protobuf::Arena* arena,
    const SessionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chat.SessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE SessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        session_token_(arena),
        _cached_size_{0} {}

inline void SessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SessionRequest::~SessionRequest() {
  // @@protoc_insertion_point(destructor:chat.SessionRequest)
  SharedDtor(*this);
}
inline void SessionRequest::SharedDtor(MessageLite& self) {
  SessionRequest& this_ = static_cast<SessionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.session_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SessionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SessionRequest(arena);
}
constexpr auto SessionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SessionRequest),
                                            alignof(SessionRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SessionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SessionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SessionRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SessionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SessionRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SessionRequest>(), &SessionRequest::ByteSizeLong,
            &SessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SessionRequest, _impl_._cached_size_),
        false,
    },
    &SessionRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SessionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> SessionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::SessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string session_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SessionRequest, _impl_.session_token_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SessionRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(SessionRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_token = 2;
    {PROTOBUF_FIELD_OFFSET(SessionRequest, _impl_.session_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\10\15\0\0\0\0\0"
    "chat.SessionRequest"
    "username"
    "session_token"
  }},
};

PROTOBUF_NOINLINE void SessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.SessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.session_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SessionRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SessionRequest& this_ = static_cast<const SessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SessionRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.SessionRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.SessionRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string session_token = 2;
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.SessionRequest.session_token");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.SessionRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SessionRequest::ByteSizeLong(const MessageLite& base) {
          const SessionRequest& this_ = static_cast<const SessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SessionRequest::ByteSizeLong() const {
          const SessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.SessionRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string session_token = 2;
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_token());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SessionRequest*>(&to_msg);
  auto& from = static_cast<const SessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.SessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SessionRequest::CopyFrom(const SessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.SessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SessionRequest::InternalSwap(SessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
}

::google::protobuf::Metadata SessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MessageRequest::_Internal {
 public:
};

MessageRequest::MessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.MessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE MessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::MessageRequest& from_msg)
      : sender_(arena, from.sender_),
        recipient_(arena, from.recipient_),
        message_(arena, from.message_),
        _cached_size_{0} {}

MessageRequest::MessageRequest(
    ::google::protobuf::Arena* arena,
    const MessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:chat.MessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE MessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sender_(arena),
        recipient_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void MessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
MessageRequest::~MessageRequest() {
  // @@protoc_insertion_point(destructor:chat.MessageRequest)
  SharedDtor(*this);
}
inline void MessageRequest::SharedDtor(MessageLite& self) {
  MessageRequest& this_ = static_cast<MessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sender_.Destroy();
  this_._impl_.recipient_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MessageRequest(arena);
}
constexpr auto MessageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MessageRequest),
                                            alignof(MessageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MessageRequest>(), &MessageRequest::ByteSizeLong,
            &MessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_._cached_size_),
        false,
    },
    &MessageRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 50, 2> MessageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::MessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MessageRequest, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.timestamp_)}},
    // string sender = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.sender_)}},
    // string recipient = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.recipient_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sender = 1;
    {PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recipient = 2;
    {PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.recipient_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\23\6\11\7\0\0\0\0"
    "chat.MessageRequest"
    "sender"
    "recipient"
    "message"
  }},
};

PROTOBUF_NOINLINE void MessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.MessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.recipient_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageRequest& this_ = static_cast<const MessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.MessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sender = 1;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageRequest.sender");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string recipient = 2;
          if (!this_._internal_recipient().empty()) {
            const std::string& _s = this_._internal_recipient();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageRequest.recipient");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageRequest.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int64 timestamp = 4;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.MessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageRequest::ByteSizeLong(const MessageLite& base) {
          const MessageRequest& this_ = static_cast<const MessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageRequest::ByteSizeLong() const {
          const MessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.MessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string sender = 1;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // string recipient = 2;
            if (!this_._internal_recipient().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // int64 timestamp = 4;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageRequest*>(&to_msg);
  auto& from = static_cast<const MessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.MessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageRequest::CopyFrom(const MessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.MessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageRequest::InternalSwap(MessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata MessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OfflineRequest::_Internal {
 public:
};

OfflineRequest::OfflineRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.OfflineRequest)
}
inline PROTOBUF_NDEBUG_INLINE OfflineRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::OfflineRequest& from_msg)
      : username_(arena, from.username_),
        _cached_size_{0} {}

OfflineRequest::OfflineRequest(
    ::google::protobuf::Arena* arena,
    const OfflineRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OfflineRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, count_),
           offsetof(Impl_, mark_as_read_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::mark_as_read_));

  // @@protoc_insertion_point(copy_constructor:chat.OfflineRequest)
}
inline PROTOBUF_NDEBUG_INLINE OfflineRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        _cached_size_{0} {}

inline void OfflineRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, mark_as_read_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::mark_as_read_));
}
OfflineRequest::~OfflineRequest() {
  // @@protoc_insertion_point(destructor:chat.OfflineRequest)
  SharedDtor(*this);
}
inline void OfflineRequest::SharedDtor(MessageLite& self) {
  OfflineRequest& this_ = static_cast<OfflineRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OfflineRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OfflineRequest(arena);
}
constexpr auto OfflineRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OfflineRequest),
                                            alignof(OfflineRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OfflineRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OfflineRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OfflineRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OfflineRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OfflineRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OfflineRequest>(), &OfflineRequest::ByteSizeLong,
            &OfflineRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_._cached_size_),
        false,
    },
    &OfflineRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OfflineRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 36, 2> OfflineRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::OfflineRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_.username_)}},
    // int32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OfflineRequest, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_.count_)}},
    // bool mark_as_read = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OfflineRequest, _impl_.mark_as_read_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_.mark_as_read_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 count = 2;
    {PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool mark_as_read = 3;
    {PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_.mark_as_read_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\23\10\0\0\0\0\0\0"
    "chat.OfflineRequest"
    "username"
  }},
};

PROTOBUF_NOINLINE void OfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.OfflineRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mark_as_read_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.mark_as_read_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OfflineRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OfflineRequest& this_ = static_cast<const OfflineRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OfflineRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OfflineRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.OfflineRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.OfflineRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 count = 2;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_count(), target);
          }

          // bool mark_as_read = 3;
          if (this_._internal_mark_as_read() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_mark_as_read(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.OfflineRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OfflineRequest::ByteSizeLong(const MessageLite& base) {
          const OfflineRequest& this_ = static_cast<const OfflineRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OfflineRequest::ByteSizeLong() const {
          const OfflineRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.OfflineRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // int32 count = 2;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_count());
            }
            // bool mark_as_read = 3;
            if (this_._internal_mark_as_read() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OfflineRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OfflineRequest*>(&to_msg);
  auto& from = static_cast<const OfflineRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.OfflineRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_mark_as_read() != 0) {
    _this->_impl_.mark_as_read_ = from._impl_.mark_as_read_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OfflineRequest::CopyFrom(const OfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.OfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OfflineRequest::InternalSwap(OfflineRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_.mark_as_read_)
      + sizeof(OfflineRequest::_impl_.mark_as_read_)
      - PROTOBUF_FIELD_OFFSET(OfflineRequest, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata OfflineRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OfflineReply::_Internal {
 public:
};

OfflineReply::OfflineReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.OfflineReply)
}
inline PROTOBUF_NDEBUG_INLINE OfflineReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::OfflineReply& from_msg)
      : messages_{visibility, arena, from.messages_},
        _cached_size_{0} {}

OfflineReply::OfflineReply(
    ::google::protobuf::Arena* arena,
    const OfflineReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OfflineReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chat.OfflineReply)
}
inline PROTOBUF_NDEBUG_INLINE OfflineReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : messages_{visibility, arena},
        _cached_size_{0} {}

inline void OfflineReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OfflineReply::~OfflineReply() {
  // @@protoc_insertion_point(destructor:chat.OfflineReply)
  SharedDtor(*this);
}
inline void OfflineReply::SharedDtor(MessageLite& self) {
  OfflineReply& this_ = static_cast<OfflineReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* OfflineReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OfflineReply(arena);
}
constexpr auto OfflineReply::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OfflineReply, _impl_.messages_) +
          decltype(OfflineReply::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OfflineReply), alignof(OfflineReply), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OfflineReply::PlacementNew_,
                                 sizeof(OfflineReply),
                                 alignof(OfflineReply));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OfflineReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OfflineReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OfflineReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OfflineReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OfflineReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OfflineReply>(), &OfflineReply::ByteSizeLong,
            &OfflineReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OfflineReply, _impl_._cached_size_),
        false,
    },
    &OfflineReply::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OfflineReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OfflineReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::OfflineReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .chat.MessageData messages = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OfflineReply, _impl_.messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .chat.MessageData messages = 1;
    {PROTOBUF_FIELD_OFFSET(OfflineReply, _impl_.messages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chat::MessageData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OfflineReply::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.OfflineReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OfflineReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OfflineReply& this_ = static_cast<const OfflineReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OfflineReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OfflineReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.OfflineReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .chat.MessageData messages = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.OfflineReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OfflineReply::ByteSizeLong(const MessageLite& base) {
          const OfflineReply& this_ = static_cast<const OfflineReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OfflineReply::ByteSizeLong() const {
          const OfflineReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.OfflineReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .chat.MessageData messages = 1;
            {
              total_size += 1UL * this_._internal_messages_size();
              for (const auto& msg : this_._internal_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OfflineReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OfflineReply*>(&to_msg);
  auto& from = static_cast<const OfflineReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.OfflineReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OfflineReply::CopyFrom(const OfflineReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.OfflineReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OfflineReply::InternalSwap(OfflineReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::google::protobuf::Metadata OfflineReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoryRequest::_Internal {
 public:
};

HistoryRequest::HistoryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.HistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE HistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::HistoryRequest& from_msg)
      : username_(arena, from.username_),
        recipient_(arena, from.recipient_),
        _cached_size_{0} {}

HistoryRequest::HistoryRequest(
    ::google::protobuf::Arena* arena,
    const HistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, start_time_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:chat.HistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE HistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        recipient_(arena),
        _cached_size_{0} {}

inline void HistoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::limit_));
}
HistoryRequest::~HistoryRequest() {
  // @@protoc_insertion_point(destructor:chat.HistoryRequest)
  SharedDtor(*this);
}
inline void HistoryRequest::SharedDtor(MessageLite& self) {
  HistoryRequest& this_ = static_cast<HistoryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.recipient_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HistoryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HistoryRequest(arena);
}
constexpr auto HistoryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HistoryRequest),
                                            alignof(HistoryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HistoryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HistoryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HistoryRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HistoryRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HistoryRequest>(), &HistoryRequest::ByteSizeLong,
            &HistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_._cached_size_),
        false,
    },
    &HistoryRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 45, 2> HistoryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::HistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.username_)}},
    // string recipient = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.recipient_)}},
    // int64 start_time = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HistoryRequest, _impl_.start_time_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.start_time_)}},
    // int64 end_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HistoryRequest, _impl_.end_time_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.end_time_)}},
    // int32 limit = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoryRequest, _impl_.limit_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.limit_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recipient = 2;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.recipient_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 start_time = 3;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.start_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 end_time = 4;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.end_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 limit = 5;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\23\10\11\0\0\0\0\0"
    "chat.HistoryRequest"
    "username"
    "recipient"
  }},
};

PROTOBUF_NOINLINE void HistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.HistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.recipient_.ClearToEmpty();
  ::memset(&_impl_.start_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.limit_) -
      reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.limit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HistoryRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HistoryRequest& this_ = static_cast<const HistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HistoryRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.HistoryRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.HistoryRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string recipient = 2;
          if (!this_._internal_recipient().empty()) {
            const std::string& _s = this_._internal_recipient();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.HistoryRequest.recipient");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 start_time = 3;
          if (this_._internal_start_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_start_time(), target);
          }

          // int64 end_time = 4;
          if (this_._internal_end_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_end_time(), target);
          }

          // int32 limit = 5;
          if (this_._internal_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_limit(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.HistoryRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HistoryRequest::ByteSizeLong(const MessageLite& base) {
          const HistoryRequest& this_ = static_cast<const HistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HistoryRequest::ByteSizeLong() const {
          const HistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.HistoryRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string recipient = 2;
            if (!this_._internal_recipient().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient());
            }
            // int64 start_time = 3;
            if (this_._internal_start_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_start_time());
            }
            // int64 end_time = 4;
            if (this_._internal_end_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_end_time());
            }
            // int32 limit = 5;
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoryRequest*>(&to_msg);
  auto& from = static_cast<const HistoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.HistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  if (from._internal_start_time() != 0) {
    _this->_impl_.start_time_ = from._impl_.start_time_;
  }
  if (from._internal_end_time() != 0) {
    _this->_impl_.end_time_ = from._impl_.end_time_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryRequest::CopyFrom(const HistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.HistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoryRequest::InternalSwap(HistoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.limit_)
      + sizeof(HistoryRequest::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata HistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoryReply::_Internal {
 public:
};

HistoryReply::HistoryReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.HistoryReply)
}
inline PROTOBUF_NDEBUG_INLINE HistoryReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::HistoryReply& from_msg)
      : messages_{visibility, arena, from.messages_},
        _cached_size_{0} {}

HistoryReply::HistoryReply(
    ::google::protobuf::Arena* arena,
    const HistoryReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoryReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chat.HistoryReply)
}
inline PROTOBUF_NDEBUG_INLINE HistoryReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : messages_{visibility, arena},
        _cached_size_{0} {}

inline void HistoryReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HistoryReply::~HistoryReply() {
  // @@protoc_insertion_point(destructor:chat.HistoryReply)
  SharedDtor(*this);
}
inline void HistoryReply::SharedDtor(MessageLite& self) {
  HistoryReply& this_ = static_cast<HistoryReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HistoryReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HistoryReply(arena);
}
constexpr auto HistoryReply::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HistoryReply, _impl_.messages_) +
          decltype(HistoryReply::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HistoryReply), alignof(HistoryReply), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HistoryReply::PlacementNew_,
                                 sizeof(HistoryReply),
                                 alignof(HistoryReply));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HistoryReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HistoryReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HistoryReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HistoryReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HistoryReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HistoryReply>(), &HistoryReply::ByteSizeLong,
            &HistoryReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HistoryReply, _impl_._cached_size_),
        false,
    },
    &HistoryReply::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HistoryReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HistoryReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::HistoryReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .chat.MessageData messages = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryReply, _impl_.messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .chat.MessageData messages = 1;
    {PROTOBUF_FIELD_OFFSET(HistoryReply, _impl_.messages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chat::MessageData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HistoryReply::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.HistoryReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HistoryReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HistoryReply& this_ = static_cast<const HistoryReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HistoryReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HistoryReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.HistoryReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .chat.MessageData messages = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.HistoryReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HistoryReply::ByteSizeLong(const MessageLite& base) {
          const HistoryReply& this_ = static_cast<const HistoryReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HistoryReply::ByteSizeLong() const {
          const HistoryReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.HistoryReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .chat.MessageData messages = 1;
            {
              total_size += 1UL * this_._internal_messages_size();
              for (const auto& msg : this_._internal_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HistoryReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoryReply*>(&to_msg);
  auto& from = static_cast<const HistoryReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.HistoryReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryReply::CopyFrom(const HistoryReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.HistoryReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoryReply::InternalSwap(HistoryReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::google::protobuf::Metadata HistoryReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserListRequest::_Internal {
 public:
};

UserListRequest::UserListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.UserListRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::UserListRequest& from_msg)
      : pattern_(arena, from.pattern_),
        _cached_size_{0} {}

UserListRequest::UserListRequest(
    ::google::protobuf::Arena* arena,
    const UserListRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, page_),
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, page_) +
               sizeof(Impl_::page_size_));

  // @@protoc_insertion_point(copy_constructor:chat.UserListRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pattern_(arena),
        _cached_size_{0} {}

inline void UserListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_),
           0,
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, page_) +
               sizeof(Impl_::page_size_));
}
UserListRequest::~UserListRequest() {
  // @@protoc_insertion_point(destructor:chat.UserListRequest)
  SharedDtor(*this);
}
inline void UserListRequest::SharedDtor(MessageLite& self) {
  UserListRequest& this_ = static_cast<UserListRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pattern_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UserListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserListRequest(arena);
}
constexpr auto UserListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UserListRequest),
                                            alignof(UserListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UserListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UserListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UserListRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UserListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UserListRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UserListRequest>(), &UserListRequest::ByteSizeLong,
            &UserListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_._cached_size_),
        false,
    },
    &UserListRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UserListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 36, 2> UserListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::UserListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string pattern = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.pattern_)}},
    // int32 page = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListRequest, _impl_.page_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.page_)}},
    // int32 page_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListRequest, _impl_.page_size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.page_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string pattern = 1;
    {PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.pattern_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 page = 2;
    {PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 page_size = 3;
    {PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\24\7\0\0\0\0\0\0"
    "chat.UserListRequest"
    "pattern"
  }},
};

PROTOBUF_NOINLINE void UserListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.UserListRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pattern_.ClearToEmpty();
  ::memset(&_impl_.page_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_size_) -
      reinterpret_cast<char*>(&_impl_.page_)) + sizeof(_impl_.page_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserListRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserListRequest& this_ = static_cast<const UserListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserListRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.UserListRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string pattern = 1;
          if (!this_._internal_pattern().empty()) {
            const std::string& _s = this_._internal_pattern();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserListRequest.pattern");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 page = 2;
          if (this_._internal_page() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_page(), target);
          }

          // int32 page_size = 3;
          if (this_._internal_page_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_page_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.UserListRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserListRequest::ByteSizeLong(const MessageLite& base) {
          const UserListRequest& this_ = static_cast<const UserListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserListRequest::ByteSizeLong() const {
          const UserListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.UserListRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string pattern = 1;
            if (!this_._internal_pattern().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pattern());
            }
            // int32 page = 2;
            if (this_._internal_page() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page());
            }
            // int32 page_size = 3;
            if (this_._internal_page_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserListRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserListRequest*>(&to_msg);
  auto& from = static_cast<const UserListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.UserListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pattern().empty()) {
    _this->_internal_set_pattern(from._internal_pattern());
  }
  if (from._internal_page() != 0) {
    _this->_impl_.page_ = from._impl_.page_;
  }
  if (from._internal_page_size() != 0) {
    _this->_impl_.page_size_ = from._impl_.page_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserListRequest::CopyFrom(const UserListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.UserListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserListRequest::InternalSwap(UserListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pattern_, &other->_impl_.pattern_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.page_size_)
      + sizeof(UserListRequest::_impl_.page_size_)
      - PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.page_)>(
          reinterpret_cast<char*>(&_impl_.page_),
          reinterpret_cast<char*>(&other->_impl_.page_));
}

::google::protobuf::Metadata UserListRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserListReply::_Internal {
 public:
};

UserListReply::UserListReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.UserListReply)
}
inline PROTOBUF_NDEBUG_INLINE UserListReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::UserListReply& from_msg)
      : usernames_{visibility, arena, from.usernames_},
        _cached_size_{0} {}

UserListReply::UserListReply(
    ::google::protobuf::Arena* arena,
    const UserListReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserListReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chat.UserListReply)
}
inline PROTOBUF_NDEBUG_INLINE UserListReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : usernames_{visibility, arena},
        _cached_size_{0} {}

inline void UserListReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserListReply::~UserListReply() {
  // @@protoc_insertion_point(destructor:chat.UserListReply)
  SharedDtor(*this);
}
inline void UserListReply::SharedDtor(MessageLite& self) {
  UserListReply& this_ = static_cast<UserListReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UserListReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserListReply(arena);
}
constexpr auto UserListReply::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UserListReply, _impl_.usernames_) +
          decltype(UserListReply::_impl_.usernames_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UserListReply), alignof(UserListReply), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UserListReply::PlacementNew_,
                                 sizeof(UserListReply),
                                 alignof(UserListReply));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UserListReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UserListReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UserListReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UserListReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UserListReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UserListReply>(), &UserListReply::ByteSizeLong,
            &UserListReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UserListReply, _impl_._cached_size_),
        false,
    },
    &UserListReply::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UserListReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> UserListReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::UserListReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string usernames = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserListReply, _impl_.usernames_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string usernames = 1;
    {PROTOBUF_FIELD_OFFSET(UserListReply, _impl_.usernames_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\22\11\0\0\0\0\0\0"
    "chat.UserListReply"
    "usernames"
  }},
};

PROTOBUF_NOINLINE void UserListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.UserListReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.usernames_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserListReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserListReply& this_ = static_cast<const UserListReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserListReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserListReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.UserListReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string usernames = 1;
          for (int i = 0, n = this_._internal_usernames_size(); i < n; ++i) {
            const auto& s = this_._internal_usernames().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserListReply.usernames");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.UserListReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserListReply::ByteSizeLong(const MessageLite& base) {
          const UserListReply& this_ = static_cast<const UserListReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserListReply::ByteSizeLong() const {
          const UserListReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.UserListReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string usernames = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_usernames().size());
              for (int i = 0, n = this_._internal_usernames().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_usernames().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserListReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserListReply*>(&to_msg);
  auto& from = static_cast<const UserListReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.UserListReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_usernames()->MergeFrom(from._internal_usernames());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserListReply::CopyFrom(const UserListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.UserListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserListReply::InternalSwap(UserListReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.usernames_.InternalSwap(&other->_impl_.usernames_);
}

::google::protobuf::Metadata UserListReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteMessageRequest::_Internal {
 public:
};

DeleteMessageRequest::DeleteMessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.DeleteMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::DeleteMessageRequest& from_msg)
      : message_ids_{visibility, arena, from.message_ids_},
        username_(arena, from.username_),
        _cached_size_{0} {}

DeleteMessageRequest::DeleteMessageRequest(
    ::google::protobuf::Arena* arena,
    const DeleteMessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chat.DeleteMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_ids_{visibility, arena},
        username_(arena),
        _cached_size_{0} {}

inline void DeleteMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteMessageRequest::~DeleteMessageRequest() {
  // @@protoc_insertion_point(destructor:chat.DeleteMessageRequest)
  SharedDtor(*this);
}
inline void DeleteMessageRequest::SharedDtor(MessageLite& self) {
  DeleteMessageRequest& this_ = static_cast<DeleteMessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteMessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteMessageRequest(arena);
}
constexpr auto DeleteMessageRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeleteMessageRequest, _impl_.message_ids_) +
          decltype(DeleteMessageRequest::_impl_.message_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DeleteMessageRequest), alignof(DeleteMessageRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeleteMessageRequest::PlacementNew_,
                                 sizeof(DeleteMessageRequest),
                                 alignof(DeleteMessageRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteMessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteMessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteMessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteMessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteMessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteMessageRequest>(), &DeleteMessageRequest::ByteSizeLong,
            &DeleteMessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteMessageRequest, _impl_._cached_size_),
        false,
    },
    &DeleteMessageRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteMessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> DeleteMessageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::DeleteMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string message_ids = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteMessageRequest, _impl_.message_ids_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteMessageRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteMessageRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string message_ids = 2;
    {PROTOBUF_FIELD_OFFSET(DeleteMessageRequest, _impl_.message_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\31\10\13\0\0\0\0\0"
    "chat.DeleteMessageRequest"
    "username"
    "message_ids"
  }},
};

PROTOBUF_NOINLINE void DeleteMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.DeleteMessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_ids_.Clear();
  _impl_.username_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteMessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteMessageRequest& this_ = static_cast<const DeleteMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteMessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.DeleteMessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.DeleteMessageRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string message_ids = 2;
          for (int i = 0, n = this_._internal_message_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_message_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.DeleteMessageRequest.message_ids");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.DeleteMessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteMessageRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteMessageRequest& this_ = static_cast<const DeleteMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteMessageRequest::ByteSizeLong() const {
          const DeleteMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.DeleteMessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string message_ids = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_message_ids().size());
              for (int i = 0, n = this_._internal_message_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_message_ids().Get(i));
              }
            }
          }
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteMessageRequest*>(&to_msg);
  auto& from = static_cast<const DeleteMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.DeleteMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_message_ids()->MergeFrom(from._internal_message_ids());
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteMessageRequest::CopyFrom(const DeleteMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.DeleteMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteMessageRequest::InternalSwap(DeleteMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.message_ids_.InternalSwap(&other->_impl_.message_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
}

::google::protobuf::Metadata DeleteMessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccountRequest::_Internal {
 public:
};

AccountRequest::AccountRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.AccountRequest)
}
inline PROTOBUF_NDEBUG_INLINE AccountRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::AccountRequest& from_msg)
      : username_(arena, from.username_),
        _cached_size_{0} {}

AccountRequest::AccountRequest(
    ::google::protobuf::Arena* arena,
    const AccountRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AccountRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chat.AccountRequest)
}
inline PROTOBUF_NDEBUG_INLINE AccountRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        _cached_size_{0} {}

inline void AccountRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AccountRequest::~AccountRequest() {
  // @@protoc_insertion_point(destructor:chat.AccountRequest)
  SharedDtor(*this);
}
inline void AccountRequest::SharedDtor(MessageLite& self) {
  AccountRequest& this_ = static_cast<AccountRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AccountRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AccountRequest(arena);
}
constexpr auto AccountRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AccountRequest),
                                            alignof(AccountRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AccountRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AccountRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AccountRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AccountRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AccountRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AccountRequest>(), &AccountRequest::ByteSizeLong,
            &AccountRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AccountRequest, _impl_._cached_size_),
        false,
    },
    &AccountRequest::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AccountRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> AccountRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::AccountRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AccountRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(AccountRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\10\0\0\0\0\0\0"
    "chat.AccountRequest"
    "username"
  }},
};

PROTOBUF_NOINLINE void AccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.AccountRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AccountRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AccountRequest& this_ = static_cast<const AccountRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AccountRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AccountRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.AccountRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.AccountRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.AccountRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AccountRequest::ByteSizeLong(const MessageLite& base) {
          const AccountRequest& this_ = static_cast<const AccountRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AccountRequest::ByteSizeLong() const {
          const AccountRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.AccountRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AccountRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccountRequest*>(&to_msg);
  auto& from = static_cast<const AccountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.AccountRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccountRequest::CopyFrom(const AccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.AccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccountRequest::InternalSwap(AccountRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
}

::google::protobuf::Metadata AccountRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MessageData::_Internal {
 public:
};

MessageData::MessageData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.MessageData)
}
inline PROTOBUF_NDEBUG_INLINE MessageData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::MessageData& from_msg)
      : id_(arena, from.id_),
        sender_(arena, from.sender_),
        recipient_(arena, from.recipient_),
        content_(arena, from.content_),
        _cached_size_{0} {}

MessageData::MessageData(
    ::google::protobuf::Arena* arena,
    const MessageData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessageData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:chat.MessageData)
}
inline PROTOBUF_NDEBUG_INLINE MessageData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        sender_(arena),
        recipient_(arena),
        content_(arena),
        _cached_size_{0} {}

inline void MessageData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
MessageData::~MessageData() {
  // @@protoc_insertion_point(destructor:chat.MessageData)
  SharedDtor(*this);
}
inline void MessageData::SharedDtor(MessageLite& self) {
  MessageData& this_ = static_cast<MessageData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.recipient_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MessageData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MessageData(arena);
}
constexpr auto MessageData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MessageData),
                                            alignof(MessageData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MessageData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MessageData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MessageData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MessageData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MessageData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MessageData>(), &MessageData::ByteSizeLong,
            &MessageData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MessageData, _impl_._cached_size_),
        false,
    },
    &MessageData::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MessageData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 49, 2> MessageData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::MessageData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MessageData, _impl_.id_)}},
    // string sender = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MessageData, _impl_.sender_)}},
    // string recipient = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MessageData, _impl_.recipient_)}},
    // string content = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MessageData, _impl_.content_)}},
    // int64 timestamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MessageData, _impl_.timestamp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MessageData, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(MessageData, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 2;
    {PROTOBUF_FIELD_OFFSET(MessageData, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recipient = 3;
    {PROTOBUF_FIELD_OFFSET(MessageData, _impl_.recipient_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 4;
    {PROTOBUF_FIELD_OFFSET(MessageData, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(MessageData, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\20\2\6\11\7\0\0\0"
    "chat.MessageData"
    "id"
    "sender"
    "recipient"
    "content"
  }},
};

PROTOBUF_NOINLINE void MessageData::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.MessageData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  _impl_.recipient_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageData& this_ = static_cast<const MessageData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.MessageData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageData.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string sender = 2;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageData.sender");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string recipient = 3;
          if (!this_._internal_recipient().empty()) {
            const std::string& _s = this_._internal_recipient();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageData.recipient");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string content = 4;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageData.content");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int64 timestamp = 5;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.MessageData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageData::ByteSizeLong(const MessageLite& base) {
          const MessageData& this_ = static_cast<const MessageData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageData::ByteSizeLong() const {
          const MessageData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.MessageData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string sender = 2;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // string recipient = 3;
            if (!this_._internal_recipient().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient());
            }
            // string content = 4;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // int64 timestamp = 5;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageData*>(&to_msg);
  auto& from = static_cast<const MessageData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.MessageData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageData::CopyFrom(const MessageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.MessageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageData::InternalSwap(MessageData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata MessageData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatusReply::_Internal {
 public:
};

StatusReply::StatusReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.StatusReply)
}
inline PROTOBUF_NDEBUG_INLINE StatusReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chat::StatusReply& from_msg)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

StatusReply::StatusReply(
    ::google::protobuf::Arena* arena,
    const StatusReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StatusReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:chat.StatusReply)
}
inline PROTOBUF_NDEBUG_INLINE StatusReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void StatusReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
StatusReply::~StatusReply() {
  // @@protoc_insertion_point(destructor:chat.StatusReply)
  SharedDtor(*this);
}
inline void StatusReply::SharedDtor(MessageLite& self) {
  StatusReply& this_ = static_cast<StatusReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StatusReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StatusReply(arena);
}
constexpr auto StatusReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StatusReply),
                                            alignof(StatusReply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StatusReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StatusReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StatusReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StatusReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StatusReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StatusReply>(), &StatusReply::ByteSizeLong,
            &StatusReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StatusReply, _impl_._cached_size_),
        false,
    },
    &StatusReply::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StatusReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> StatusReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::StatusReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.error_message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusReply, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\15\0\0\0\0\0"
    "chat.StatusReply"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void StatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.StatusReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StatusReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StatusReply& this_ = static_cast<const StatusReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StatusReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StatusReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chat.StatusReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.StatusReply.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chat.StatusReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StatusReply::ByteSizeLong(const MessageLite& base) {
          const StatusReply& this_ = static_cast<const StatusReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StatusReply::ByteSizeLong() const {
          const StatusReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chat.StatusReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StatusReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatusReply*>(&to_msg);
  auto& from = static_cast<const StatusReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.StatusReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusReply::CopyFrom(const StatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.StatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatusReply::InternalSwap(StatusReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata StatusReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:chat.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:chat.Empty)
}

inline void* Empty::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Empty(arena);
}
constexpr auto Empty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Empty),
                                            alignof(Empty));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Empty::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Empty_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Empty::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Empty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Empty::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Empty>(), &Empty::ByteSizeLong,
            &Empty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
        false,
    },
    &Empty::kDescriptorMethods,
    &descriptor_table_chat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Empty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace chat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_chat_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
